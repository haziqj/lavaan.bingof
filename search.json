[{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://haziqj.ml/lavaan.bingof/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://haziqj.ml/lavaan.bingof/articles/complex_sampling1.html","id":"stratified-sampling","dir":"Articles","previous_headings":"","what":"Stratified sampling","title":"Details about the complex sampling procedure","text":"school type (strata), select 500 students using SRS. Let \\(N_a\\) total number students stratum \\(\\\\{1,2,3\\}\\). probability selection student stratum \\(\\) \\(\\Pr(\\text{selection}) = \\frac{500}{N_a}\\). total sample size \\(n= 3 \\times 1000 = 3,000\\).","code":""},{"path":"https://haziqj.ml/lavaan.bingof/articles/complex_sampling1.html","id":"two-stage-cluster-sampling","dir":"Articles","previous_headings":"","what":"Two-stage cluster sampling","title":"Details about the complex sampling procedure","text":"Select 150 PSU schools (clusters) using probabilities proportional size (PPS). school, select 1 class SRS, students class added sample. probability selection student PSU \\(b=1,\\dots,10000\\) \\[ \\Pr(\\text{selection}) = \\Pr(\\text{weighted school selection}) \\times \\frac{1}{\\# \\text{ classes school }b}. \\] total sample size vary sample sample, average \\(n = 150 \\times 20 = 3,000\\).","code":""},{"path":"https://haziqj.ml/lavaan.bingof/articles/complex_sampling1.html","id":"two-stage-stratified-cluster-sampling","dir":"Articles","previous_headings":"","what":"Two-stage stratified cluster sampling","title":"Details about the complex sampling procedure","text":"school type (strata), select 50 schools using SRS. , within school, select 1 class SRS, students class added sample. probability selection student PSU \\(b\\) school type \\(\\) \\[ \\Pr(\\text{selection}) = \\frac{50}{\\# \\text{ schools type } } \\times \\frac{1}{\\# \\text{ classes school }b}. \\] , expected sample size roughly \\(n=3,000\\).","code":""},{"path":"https://haziqj.ml/lavaan.bingof/articles/complex_sampling1.html","id":"generating-the-population-data","dir":"Articles","previous_headings":"","what":"Generating the population data","title":"Details about the complex sampling procedure","text":"purposes checking data generation process, use Model 1 parameters generate response patterns. , assume 1 factor model \\(p=5\\) observed response items. true model parameter values \\({\\boldsymbol\\theta}\\) (loadings thresholds) follows:","code":"#> lambda1 lambda2 lambda3 lambda4 lambda5    tau1    tau2    tau3    tau4    tau5  #>    0.80    0.70    0.47    0.38    0.34   -1.43   -0.55   -0.13   -0.72   -1.13"},{"path":"https://haziqj.ml/lavaan.bingof/articles/complex_sampling1.html","id":"comparison-of-population-and-model-implied-moments","dir":"Articles","previous_headings":"Generating the population data","what":"Comparison of population and model-implied moments","title":"Details about the complex sampling procedure","text":"","code":"# Univariate moments (model-implied) round(pi1, 4) #>     y1     y2     y3     y4     y5  #> 0.9236 0.7088 0.5517 0.7642 0.8708  # Univariate moments (population statistics) round(prop1, 4) #>     y1     y2     y3     y4     y5  #> 0.9234 0.7083 0.5511 0.7635 0.8706  # Errors (percentage) round((prop1 - pi1) / pi1 * 100, 2) #>    y1    y2    y3    y4    y5  #> -0.03 -0.08 -0.10 -0.10 -0.02"},{"path":"https://haziqj.ml/lavaan.bingof/articles/complex_sampling1.html","id":"model-fit","dir":"Articles","previous_headings":"Generating the population data","what":"Model fit","title":"Details about the complex sampling procedure","text":"","code":"# Comparison of lambda values round(coef(fit), 2)[1:5] #> eta1=~y1 eta1=~y2 eta1=~y3 eta1=~y4 eta1=~y5  #>     0.80     0.70     0.47     0.38     0.34 true_vals[1:5] #> lambda1 lambda2 lambda3 lambda4 lambda5  #>    0.80    0.70    0.47    0.38    0.34  # Comparison of threshold values round(coef(fit), 2)[-(1:5)] #> y1|t1 y2|t1 y3|t1 y4|t1 y5|t1  #> -1.43 -0.55 -0.13 -0.72 -1.13 true_vals[-(1:5)] #>  tau1  tau2  tau3  tau4  tau5  #> -1.43 -0.55 -0.13 -0.72 -1.13"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://haziqj.ml/lavaan.bingof/articles/complex_sampling1.html","id":"performing-a-complex-sampling-procedure","dir":"Articles","previous_headings":"","what":"Performing a complex sampling procedure","title":"Details about the complex sampling procedure","text":"three functions perform three complex sampling procedures described earlier.","code":"# Stratified sampling (samp1 <- gen_data_bin_complex1(population = pop, seed = 123)) #> # A tibble: 3,000 × 9 #>    type  school class    wt y1    y2    y3    y4    y5    #>    <chr>  <int> <chr> <dbl> <ord> <ord> <ord> <ord> <ord> #>  1 A          1 ab    0.599 1     1     1     1     1     #>  2 A          1 y     0.599 1     1     1     1     1     #>  3 A          2 j     0.599 1     1     1     1     1     #>  4 A          2 x     0.599 1     1     1     1     1     #>  5 A          3 ae    0.599 1     1     0     1     1     #>  6 A          3 v     0.599 1     1     1     0     1     #>  7 A          4 k     0.599 1     1     1     1     1     #>  8 A          4 l     0.599 1     1     1     1     1     #>  9 A          5 b     0.599 1     1     0     1     1     #> 10 A          5 f     0.599 1     1     1     0     1     #> # ℹ 2,990 more rows  # Two-stage cluster sampling (samp2 <- gen_data_bin_complex2(population = pop, seed = 123)) #> # A tibble: 3,303 × 9 #>    type  school class    wt y1    y2    y3    y4    y5    #>    <chr>  <int> <chr> <dbl> <ord> <ord> <ord> <ord> <ord> #>  1 A          8 s      1.41 1     1     1     1     1     #>  2 A          8 s      1.41 1     1     0     1     1     #>  3 A          8 s      1.41 1     1     1     1     1     #>  4 A          8 s      1.41 1     1     1     1     1     #>  5 A          8 s      1.41 1     1     1     1     1     #>  6 A          8 s      1.41 1     1     1     1     1     #>  7 A          8 s      1.41 1     1     1     1     1     #>  8 A          8 s      1.41 1     1     1     1     1     #>  9 A          8 s      1.41 1     1     0     1     1     #> 10 A          8 s      1.41 1     1     1     1     1     #> # ℹ 3,293 more rows  # Two-stage stratified cluster sampling (samp3 <- gen_data_bin_complex3(population = pop, seed = 123)) #> # A tibble: 3,007 × 9 #>    type  school class    wt y1    y2    y3    y4    y5    #>    <chr>  <int> <chr> <dbl> <ord> <ord> <ord> <ord> <ord> #>  1 A          7 ae    0.887 1     1     1     1     1     #>  2 A          7 ae    0.887 1     1     1     0     1     #>  3 A          7 ae    0.887 1     1     1     1     1     #>  4 A          7 ae    0.887 1     0     0     1     1     #>  5 A          7 ae    0.887 1     1     0     1     1     #>  6 A          7 ae    0.887 1     1     1     1     1     #>  7 A          7 ae    0.887 1     1     1     1     1     #>  8 A          7 ae    0.887 1     1     1     1     1     #>  9 A          7 ae    0.887 1     1     0     1     1     #> 10 A          7 ae    0.887 1     1     1     1     1     #> # ℹ 2,997 more rows"},{"path":[]},{"path":"https://haziqj.ml/lavaan.bingof/articles/complex_sampling1.html","id":"check-bias-in-model-fit","dir":"Articles","previous_headings":"Performing a complex sampling procedure","what":"Check bias in model fit","title":"Details about the complex sampling procedure","text":"check bias model fit, following: Generate data sets using gen_data_bin_complex() stratified, cluster, stratified cluster methods. Fit factor model using lavaan compare estimates true parameter values true_vals. Repeat steps 1 & 2 total 1,000 times.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/articles/intro.html","id":"model-based-probabilities","dir":"Articles","previous_headings":"","what":"Model-based probabilities","title":"Introduction","text":"generate multivariate dichotomous variable \\({\\mathbf y}= (y_1,\\dots,y_p)^\\top \\\\{0,1\\}^p\\) following factor analysis model according underlying random variable framework. Suppose exists latent, continuous variable \\(y_i^*\\), \\(=1,\\dots,p\\), \\[\\begin{equation}\\label{eq:factorreg} y_i = \\begin{cases} 1  & y_i^* > \\tau_i \\\\ 0  & y_i^* \\leq \\tau_i. \\end{cases} \\end{equation}\\] factor model assumes \\[\\begin{equation} \\myoverbrace{ \\begin{pmatrix} y_1^* \\\\ \\vdots \\\\ y_p^* \\end{pmatrix}}{{\\mathbf y}^*} = \\myoverbrace{ \\begin{pmatrix} \\lambda_{11} &\\cdots & \\lambda_{1q} \\\\ \\vdots & \\ddots & \\vdots \\\\ \\lambda_{p1} &\\cdots & \\lambda_{pq} \\\\ \\end{pmatrix}}{{\\boldsymbol\\Lambda}} \\, \\myoverbrace{ \\begin{pmatrix} \\eta_1 \\\\ \\vdots \\\\ \\eta_q \\end{pmatrix}}{{\\boldsymbol\\eta}} + \\myoverbrace{ \\begin{pmatrix} \\epsilon_1 \\\\ \\vdots \\\\ \\epsilon_p \\end{pmatrix}}{{\\boldsymbol\\epsilon}} \\end{equation}\\] \\({\\boldsymbol\\eta}\\sim \\mathop{\\mathrm{N}}_q({\\mathbf 0},{\\boldsymbol\\Psi})\\) \\({\\boldsymbol\\Psi}\\) correlation matrix, \\({\\boldsymbol\\epsilon}\\sim \\mathop{\\mathrm{N}}_p({\\mathbf 0},{\\boldsymbol\\Theta}_\\epsilon)\\) \\({\\boldsymbol\\Theta}_\\epsilon = {\\mathbf }- \\diag({\\boldsymbol\\Lambda}{\\boldsymbol\\Psi}{\\boldsymbol\\Lambda}^\\top)\\). two assumptions combine imply \\({\\mathbf y}^* \\sim \\mathop{\\mathrm{N}}_p({\\mathbf 0}, {\\boldsymbol\\Sigma}_{{\\mathbf y}^*})\\), \\[\\begin{equation} {\\boldsymbol\\Sigma}_{{\\mathbf y}^*}= {\\boldsymbol\\Lambda}{\\boldsymbol\\Phi}{\\boldsymbol\\Lambda}^\\top + {\\boldsymbol\\Theta}_\\epsilon. \\end{equation}\\] Note marginally underlying variables standard normal correlated across items.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://haziqj.ml/lavaan.bingof/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Haziq Jamil. Author, maintainer. Irini Moustaki. Contributor. Myrsini Katsikatsou. Contributor.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jamil H (2023). lavaan.bingof: Limited Information Goodness Fit Tests Binary Factor Models. https://github.com/haziqj/lavaan.bingof, https://haziqj.ml/lavaan.bingof/.","code":"@Manual{,   title = {lavaan.bingof: Limited Information Goodness of Fit Tests for Binary Factor Models},   author = {Haziq Jamil},   year = {2023},   note = {https://github.com/haziqj/lavaan.bingof, https://haziqj.ml/lavaan.bingof/}, }"},{"path":"https://haziqj.ml/lavaan.bingof/index.html","id":"lavaanbingof","dir":"","previous_headings":"","what":"Limited Information Goodness of Fit Tests for Binary Factor Models","title":"Limited Information Goodness of Fit Tests for Binary Factor Models","text":"accompanying R package paper Goodness--fit tests composite likelihood estimation simple random complex survey sampling package contains functions compute test statistics conduct simulation studies described manuscript.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Limited Information Goodness of Fit Tests for Binary Factor Models","text":"Install package GitHub repository: Note: package depends modified lavaan package version 0.6-14.9001, can installed GitHub repository “haziqj/lavaan”.","code":"# install.packages(\"pak\")  pak::pkg_install(\"haziqj/lavaan.bingof\") library(lavaan.bingof)  # load package"},{"path":"https://haziqj.ml/lavaan.bingof/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Limited Information Goodness of Fit Tests for Binary Factor Models","text":"three main functionalities package: Generate simulated data either infinite population finite population using complex sampling procedure. Obtain test statistic values, degrees freedom chi-square variates, corresponding p-values determine goodness--fit. Wrap functions 1 2 convenient way perform simulation studies Type errors power.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/index.html","id":"create-a-simulated-data-set-of-ordinal-binary-responses","dir":"","previous_headings":"Usage","what":"Create a simulated data set of ordinal binary responses","title":"Limited Information Goodness of Fit Tests for Binary Factor Models","text":"","code":"(dat <- gen_data_bin(n = 1000, seed = 123)) #> # A tibble: 1,000 × 5 #>    y1    y2    y3    y4    y5    #>    <ord> <ord> <ord> <ord> <ord> #>  1 1     0     0     1     0     #>  2 1     1     1     1     1     #>  3 1     1     0     1     1     #>  4 1     1     0     1     1     #>  5 1     1     1     1     0     #>  6 1     1     1     1     1     #>  7 1     1     0     1     1     #>  8 0     0     0     1     1     #>  9 1     1     0     1     1     #> 10 1     0     0     1     1     #> # ℹ 990 more rows"},{"path":"https://haziqj.ml/lavaan.bingof/index.html","id":"obtain-the-various-test-statistics-and-p-values","dir":"","previous_headings":"Usage","what":"Obtain the various test statistics and p-values","title":"Limited Information Goodness of Fit Tests for Binary Factor Models","text":"","code":"# Fit lavaan model using PML estimation (mod <- txt_mod(model.no = 1)) #> [1] \"eta1 =~ NA*y1 + y2 + y3 + y4 + y5\" fit <- lavaan::sem(mod, dat, std.lv = TRUE, estimator = \"PML\")  # Test statistics all_tests(fit) #> # A tibble: 7 × 4 #>       W    df name           pval #>   <dbl> <dbl> <chr>         <dbl> #> 1  4.96  5    Wald          0.420 #> 2  1.81  3.14 WaldV2,MM3    0.638 #> 3  4.96  5    WaldV3        0.421 #> 4  4.07  4.53 Pearson       0.474 #> 5  3.30  3.72 PearsonV2,MM3 0.465 #> 6  4.11  4.34 RSS,MM3       0.441 #> 7  4.93  5.00 Multn,MM3     0.424"},{"path":"https://haziqj.ml/lavaan.bingof/index.html","id":"test-statistics-under-a-complex-sampling-scheme","dir":"","previous_headings":"Usage","what":"Test statistics under a complex sampling scheme","title":"Limited Information Goodness of Fit Tests for Binary Factor Models","text":"","code":"# Simulate a two-stage stratified cluster sampling with 50 PSUs sampled per # stratum, and 1 cluster sampled within each PSU. (dat <- gen_data_bin_complex3(population = make_population(1), npsu = 50,                                seed = 9423)) #> # A tibble: 3,046 × 9 #>    type  school class    wt y1    y2    y3    y4    y5    #>    <chr>  <int> <chr> <dbl> <ord> <ord> <ord> <ord> <ord> #>  1 A          4 ae    0.796 1     1     1     1     1     #>  2 A          4 ae    0.796 1     1     1     1     1     #>  3 A          4 ae    0.796 1     1     0     0     1     #>  4 A          4 ae    0.796 1     1     1     0     0     #>  5 A          4 ae    0.796 1     1     1     1     1     #>  6 A          4 ae    0.796 1     1     1     0     1     #>  7 A          4 ae    0.796 1     1     1     1     1     #>  8 A          4 ae    0.796 1     1     1     1     1     #>  9 A          4 ae    0.796 1     1     1     1     1     #> 10 A          4 ae    0.796 1     1     0     0     1     #> # ℹ 3,036 more rows  # Fit lavaan model and create survey object fit0 <- lavaan::sem(mod, dat, std.lv = TRUE, estimator = \"PML\")  # ignore wt fit1 <- lavaan::sem(mod, dat, std.lv = TRUE, estimator = \"PML\",                     sampling.weights = \"wt\") svy <- survey::svydesign(ids = ~ school + class, strata = ~ type,                          weights = ~ wt, data = dat, nest = TRUE)  # Compare with and without sampling weights Wald_test(fit0) #>          W df name      pval #> 1 5.444331  5 Wald 0.3640888 Wald_test(fit1, svy_design = svy) #>          W df name     pval #> 1 6.194313  5 Wald 0.287768"},{"path":"https://haziqj.ml/lavaan.bingof/index.html","id":"simulation-wrapper","dir":"","previous_headings":"Usage","what":"Simulation wrapper","title":"Limited Information Goodness of Fit Tests for Binary Factor Models","text":"","code":"# To conduct a simulation study based on a 5 factor model (25 repetitions only # for illustration). Data generated according to a stratified complex sample. (pc <- parallel::detectCores())   # how many cores do we have? #> [1] 32 res <- ligof_sims(model.no = 1, nsim = pc, samp = \"strat\", simtype = \"type1\",                   no.cores = pc) #>|======================================================================| 100% res %>%   bind_rows() %>%   group_by(name) %>%   summarise(rej_rate = mean(pval < 0.1)) #> # A tibble: 7 × 2 #>   name          rej_rate #>   <chr>            <dbl> #> 1 Multn,MM3       0.0625 #> 2 Pearson         0.0312 #> 3 PearsonV2,MM3   0.0312 #> 4 RSS,MM3         0.0312 #> 5 Wald            0.0625 #> 6 WaldV2,MM3      0.0312 #> 7 WaldV3          0.0625"},{"path":"https://haziqj.ml/lavaan.bingof/reference/all_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Return all test statistics values — all_tests","title":"Return all test statistics values — all_tests","text":"Return test statistics values","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/all_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return all test statistics values — all_tests","text":"","code":"all_tests(object, svy_design = NULL, sim = NULL)"},{"path":"https://haziqj.ml/lavaan.bingof/reference/all_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return all test statistics values — all_tests","text":"object lavaan::lavaan() fit object. svy_design survey::svydesign() object. Optional. sim (integer) Optional used large-scale simulations.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/all_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return all test statistics values — all_tests","text":"Additionally, sim argument provided, two columns appended: Whether lavaan::lavaan()  fit converged matrix rank \\(\\Omega_2\\) (useful see computational issues arose model fit.)","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/all_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return all test statistics values — all_tests","text":"","code":"fit <- lavaan::sem(txt_mod(1), gen_data_bin(1, n = 500), std.lv = TRUE,                    estimator = \"PML\") all_tests(fit) #> # A tibble: 7 × 4 #>       W    df name           pval #>   <dbl> <dbl> <chr>         <dbl> #> 1 2.16   5    Wald          0.827 #> 2 0.874  3.35 WaldV2,MM3    0.874 #> 3 2.11   5    WaldV3        0.833 #> 4 1.43   4.08 Pearson       0.848 #> 5 0.664  2.90 PearsonV2,MM3 0.870 #> 6 1.04   3.57 RSS,MM3       0.863 #> 7 2.09   5.00 Multn,MM3     0.837"},{"path":"https://haziqj.ml/lavaan.bingof/reference/create_resp_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table of binary response patterns — create_resp_pattern","title":"Create a table of binary response patterns — create_resp_pattern","text":"Ordering incremental patterns power 2 right left.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/create_resp_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table of binary response patterns — create_resp_pattern","text":"","code":"create_resp_pattern(p = 3)"},{"path":"https://haziqj.ml/lavaan.bingof/reference/create_resp_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table of binary response patterns — create_resp_pattern","text":"p (integer > 0) number items.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/create_resp_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table of binary response patterns — create_resp_pattern","text":"tibble() containing ordinal binary values (0/1) items well column indicating one \\(2^p\\) response patterns.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/create_resp_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a table of binary response patterns — create_resp_pattern","text":"","code":"create_resp_pattern(p = 3) #> # A tibble: 8 × 4 #>   y1    y2    y3    pattern #>   <ord> <ord> <ord> <chr>   #> 1 1     1     1     111     #> 2 1     1     0     110     #> 3 1     0     1     101     #> 4 1     0     0     100     #> 5 0     1     1     011     #> 6 0     1     0     010     #> 7 0     0     1     001     #> 8 0     0     0     000"},{"path":"https://haziqj.ml/lavaan.bingof/reference/gen_data_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate independent data samples according to model.no — gen_data_bin","title":"Generate independent data samples according to model.no — gen_data_bin","text":"Generate independent data samples according model.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/gen_data_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate independent data samples according to model.no — gen_data_bin","text":"","code":"gen_data_bin(   model.no = 1,   n = 1000,   seed = NULL,   H1 = FALSE,   return_all = FALSE )"},{"path":"https://haziqj.ml/lavaan.bingof/reference/gen_data_bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate independent data samples according to model.no — gen_data_bin","text":"model.(integer) Choose 1--5. See details. n (numeric > 0) Sample size. seed (numeric) random seed. H1 (logical) generating data misspecify true model? power simulations. return_all (logical) Return underlying latent variable \\(y^*\\) well?","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/gen_data_bin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate independent data samples according to model.no — gen_data_bin","text":"tibble() containing ordinal binary values (0/1) items.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/gen_data_bin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate independent data samples according to model.no — gen_data_bin","text":"","code":"gen_data_bin(1) #> # A tibble: 1,000 × 5 #>    y1    y2    y3    y4    y5    #>    <ord> <ord> <ord> <ord> <ord> #>  1 1     1     0     1     1     #>  2 1     0     0     0     1     #>  3 1     1     1     1     1     #>  4 1     1     1     0     1     #>  5 1     0     1     0     1     #>  6 1     1     1     1     1     #>  7 1     1     1     1     1     #>  8 0     0     0     0     1     #>  9 1     0     1     0     1     #> 10 1     1     1     1     1     #> # ℹ 990 more rows"},{"path":"https://haziqj.ml/lavaan.bingof/reference/gen_data_bin_srs.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the school population — gen_data_bin_srs","title":"Sample from the school population — gen_data_bin_srs","text":"several functions simulate complex (even simple random) sampling procedure school population generated make_population(): gen_data_bin_srs() performs simple random sample entire population. gen_data_bin_complex1() performs stratified sampling procedure school type strata, students PSU. gen_data_bin_complex2() performs two-stage cluster sampling procedure (ignoring strata) schools PSU, clustering class. gen_data_bin_complex3() performs two-stage stratified cluster sampling procedure students nested within class within school (PSU) within type (strata).","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/gen_data_bin_srs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the school population — gen_data_bin_srs","text":"","code":"gen_data_bin_srs(population = make_population(1), n = 3000, seed = NULL)  gen_data_bin_complex1(   population = make_population(1),   npsu = 1000,   seed = NULL )  gen_data_bin_complex2(population = make_population(1), npsu = 150, seed = NULL)  gen_data_bin_complex3(population = make_population(1), npsu = 50, seed = NULL)"},{"path":"https://haziqj.ml/lavaan.bingof/reference/gen_data_bin_srs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the school population — gen_data_bin_srs","text":"population (tibble) Population generated make_population(). n (integer > 0) Sample size SRS procedure. seed (numeric) random seed. npsu (integer > 0) stratified sampling, number students within strata sample. cluster sampling, number schools (clusters) sample. stratified cluster sampling, also number schools (clusters) per school type (strata).","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/gen_data_bin_srs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the school population — gen_data_bin_srs","text":"tibble() containing ordinal binary values (0/1) items, well population stratum clusters (type, school, class).","code":""},{"path":[]},{"path":"https://haziqj.ml/lavaan.bingof/reference/gen_data_bin_srs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample from the school population — gen_data_bin_srs","text":"","code":"if (FALSE) { pop <- make_population(2) gen_data_bin_srs(pop) gen_data_bin_complex1(pop) gen_data_bin_complex2(pop) gen_data_bin_complex3(pop) }"},{"path":"https://haziqj.ml/lavaan.bingof/reference/get_true_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns theoretical true values — get_true_values","title":"Returns theoretical true values — get_true_values","text":"get_true_values() returns true values freely estimated theta values order: \\(\\lambda\\) (loadings), \\(\\rho\\) (factor correlations), \\(\\tau\\) (thresholds) get_theoretical_uni_bi_moments() returns univariate (pidot1) bivariate (pidot2) theoretical probabilities successes.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/get_true_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns theoretical true values — get_true_values","text":"","code":"get_true_values(model.no)  get_theoretical_uni_bi_moments(model.no, collapse = FALSE)"},{"path":"https://haziqj.ml/lavaan.bingof/reference/get_true_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns theoretical true values — get_true_values","text":"model.(integer) Choose 1--5. See details. collapse (logical) vector returned instead list separating univariate bivariate quantities?","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/get_true_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns theoretical true values — get_true_values","text":"vector true parameter values used simulations.","code":""},{"path":[]},{"path":"https://haziqj.ml/lavaan.bingof/reference/get_true_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns theoretical true values — get_true_values","text":"","code":"get_true_values(1) #> lambda1 lambda2 lambda3 lambda4 lambda5    tau1    tau2    tau3    tau4    tau5  #>    0.80    0.70    0.47    0.38    0.34   -1.43   -0.55   -0.13   -0.72   -1.13  get_theoretical_uni_bi_moments(1) #> $pidot1 #> [1] 0.9236415 0.7088403 0.5517168 0.7642375 0.8707619 #>  #> $pidot2 #>  [1] 0.6874899 0.5311301 0.7213463 0.8143565 0.4368475 0.5714570 0.6356945 #>  [8] 0.4436331 0.4938743 0.6742887 #>"},{"path":"https://haziqj.ml/lavaan.bingof/reference/get_uni_bi_moments.html","id":null,"dir":"Reference","previous_headings":"","what":"Get univariate and bivariate moments — get_uni_bi_moments","title":"Get univariate and bivariate moments — get_uni_bi_moments","text":"Returns univariate bivariate moments (.e. positive probabilities ) based model .e. pidot1 pidot2 (weighted) sample .e. pdot1 pdot2.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/get_uni_bi_moments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get univariate and bivariate moments — get_uni_bi_moments","text":"","code":"get_uni_bi_moments(.lavobject)"},{"path":"https://haziqj.ml/lavaan.bingof/reference/get_uni_bi_moments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get univariate and bivariate moments — get_uni_bi_moments","text":".lavobject lavaan::lavaan() fit object.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/get_uni_bi_moments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get univariate and bivariate moments — get_uni_bi_moments","text":"list univariate bivariate moments.","code":""},{"path":[]},{"path":"https://haziqj.ml/lavaan.bingof/reference/get_uni_bi_moments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get univariate and bivariate moments — get_uni_bi_moments","text":"","code":"fit <- lavaan::sem(txt_mod(1), gen_data_bin(1, n = 500), std.lv = TRUE,                    estimator = \"PML\") get_uni_bi_moments(fit) #> $pdot1 #> [1] 0.940 0.762 0.544 0.754 0.886 #>  #> $pidot1 #> [1] 0.9399910 0.7619757 0.5440243 0.7540125 0.8859987 #>  #> $pdot2 #>  [1] 0.738 0.524 0.720 0.842 0.460 0.606 0.696 0.440 0.500 0.682 #>  #> $pidot2 #>  [1] 0.7366733 0.5261566 0.7204836 0.8412893 0.4593009 0.6076357 0.6974476 #>  [8] 0.4376179 0.4995690 0.6811869 #>"},{"path":"https://haziqj.ml/lavaan.bingof/reference/lavaan.bingof-package.html","id":null,"dir":"Reference","previous_headings":"","what":"lavaan.bingof: Limited Information Goodness of Fit Tests for Binary Factor Models — lavaan.bingof-package","title":"lavaan.bingof: Limited Information Goodness of Fit Tests for Binary Factor Models — lavaan.bingof-package","text":"accompanying R package paper \"Goodness--fit tests composite likelihood estimation simple random complex survey sampling\". fitting binary factor model lavaan, user can call several functions compute goodness--fit test statistics based lower order marginals compute corresponding p-values.","code":""},{"path":[]},{"path":"https://haziqj.ml/lavaan.bingof/reference/lavaan.bingof-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"lavaan.bingof: Limited Information Goodness of Fit Tests for Binary Factor Models — lavaan.bingof-package","text":"Maintainer: Haziq Jamil haziq.jamil@gmail.com (ORCID) contributors: Irini Moustaki (ORCID) [contributor] Myrsini Katsikatsou [contributor]","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/ligof-test-stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Limited information goodness-of-fit test statistics — ligof-test-stats","title":"Limited information goodness-of-fit test statistics — ligof-test-stats","text":"Limited information goodness--fit test statistics","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/ligof-test-stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limited information goodness-of-fit test statistics — ligof-test-stats","text":"","code":"Wald_test(object, approx_Omega2 = FALSE, svy_design = NULL)  Wald_test_v2(object, approx_Omega2 = FALSE, svy_design = NULL, .order = 3)  Wald_test_v3(object, svy_design = NULL)  Pearson_test_v1(object, approx_Omega2 = FALSE, svy_design = NULL, .order = 2)  Pearson_test_v2(object, approx_Omega2 = FALSE, svy_design = NULL, .order = \"3\")  RSS_test(object, approx_Omega2 = FALSE, svy_design = NULL, .order = \"3\")  Multn_test(object, approx_Omega2 = FALSE, svy_design = NULL, .order = \"3\")"},{"path":"https://haziqj.ml/lavaan.bingof/reference/ligof-test-stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limited information goodness-of-fit test statistics — ligof-test-stats","text":"object lavaan::lavaan() fit object. approx_Omega2 (logical) EXPERIMENTAL approximate residual covariance matrix \\(\\Omega_2\\) used? Defaults FALSE. svy_design survey::svydesign() object. Optional. .order (integer) Either number moments match chi-square test statistic matching procedure (choose 1--3), Rao-Scott type adjustment order (choose 1 2).","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/ligof-test-stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Limited information goodness-of-fit test statistics — ligof-test-stats","text":"data frame containing test statistics \\(W\\), degrees freedom, name test, \\(p\\)-value.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/ligof-test-stats.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Limited information goodness-of-fit test statistics — ligof-test-stats","text":"Wald_test(): Wald test statistic. Wald_test_v2(): Wald test statistic using simple diagonal \\(\\Omega_2\\) matrix. Wald_test_v3(): Wald test statistic bypassing \\(\\Omega_2\\) matrix (uses orthogonal complements \\(\\Delta_2\\)). Pearson_test_v1(): Pearson test \\(p\\)-values calculated using Rao-Scott type adjustment. Pearson_test_v2(): Pearson test \\(p\\)-values calculated using moment-matching procedure. RSS_test(): residual sum squares (RSS) test. Uses moment-matching \\(p\\)-value calculations. Multn_test(): multinomial test. Uses moment-matching \\(p\\)-value calculations.","code":""},{"path":[]},{"path":"https://haziqj.ml/lavaan.bingof/reference/ligof-test-stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Limited information goodness-of-fit test statistics — ligof-test-stats","text":"","code":"fit <- lavaan::sem(txt_mod(1), gen_data_bin(1, n = 500), std.lv = TRUE,                    estimator = \"PML\") Wald_test(fit) #>          W df name      pval #> 1 4.746727  5 Wald 0.4475652"},{"path":"https://haziqj.ml/lavaan.bingof/reference/ligof_sims.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function for Type 1 and Power simulations — ligof_sims","title":"Wrapper function for Type 1 and Power simulations — ligof_sims","text":"Wrapper function Type 1 Power simulations","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/ligof_sims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function for Type 1 and Power simulations — ligof_sims","text":"","code":"ligof_sims(   model.no = 1,   nsim = 1000,   samp_size = 100,   samp = c(\"srs\", \"strat\", \"clust\", \"strcl\"),   simtype = c(\"type1\", \"power\"),   starting_seed = 4423,   no.cores = parallel::detectCores() - 2 )"},{"path":"https://haziqj.ml/lavaan.bingof/reference/ligof_sims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function for Type 1 and Power simulations — ligof_sims","text":"model.(integer) Choose 1--5. See details. nsim (integer) number simulations conduct samp_size (integer) sample size SRS simulations samp (character) Choose sampling method simulated data. One srs, strat, clust strcl. simtype (character) Whether type1 simulation power simulation. starting_seed (integer) starting random seed. .cores (integer) number cores use parallelisation.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/ligof_sims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function for Type 1 and Power simulations — ligof_sims","text":"list tibble()s output all_tests().","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/ligof_sims.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper function for Type 1 and Power simulations — ligof_sims","text":"","code":"if (FALSE) { # To run the SRS Type 1 simulations analysis_path <- dirname(rstudioapi::getSourceEditorContext()$path) sim_type <- \"type1\" for (the_samp_size in c(100, 250, 500, 1000, 2000, 3000)) {   for (mod_no in 1:5) {     sim_name <- paste0(\"srs\", mod_no, \"_n\", the_samp_size, \"_\", sim_type)     cat(\"[\", as.character(Sys.time()), \"]\", \"Now running simulation\",         sim_name, \"\\n\")     sim <- ligof_sims(mod_no, samp_size = the_samp_size,                       samp = \"srs\", simtype = sim_type)     list2env(setNames(list(sim), sim_name), envir = .GlobalEnv) %>% invisible     save(list = sim_name, file = paste0(analysis_path, \"/Rsave/\",                                         sim_name, \".RData\"))   } } }"},{"path":"https://haziqj.ml/lavaan.bingof/reference/make_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate the school population data set — make_population","title":"Simulate the school population data set — make_population","text":"Simulate school population data set","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/make_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate the school population data set — make_population","text":"","code":"make_population(model.no = 1, seed = 123, H1 = FALSE, return_all = FALSE)"},{"path":"https://haziqj.ml/lavaan.bingof/reference/make_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate the school population data set — make_population","text":"model.(integer) Choose 1--5. See details. seed (numeric) random seed. H1 (logical) generating data misspecify true model? power simulations. return_all (logical) Return underlying latent variables (\\(y^*\\) \\(\\eta\\)) well? well?","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/make_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate the school population data set — make_population","text":"tibble() containing ordinal binary values (0/1) items, well population stratum clusters (type, school, class).","code":""},{"path":[]},{"path":"https://haziqj.ml/lavaan.bingof/reference/make_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate the school population data set — make_population","text":"","code":"if (FALSE) { make_population(1) }"},{"path":"https://haziqj.ml/lavaan.bingof/reference/transformation-matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Create transformation matrices — transformation-matrices","title":"Create transformation matrices — transformation-matrices","text":"derived limited information test statistics involves design matrices act transformations larger \\(2^p\\) response pattern space lower order univariate bivariate marginals. create_G_mat() returns \\(\\tilde R \\times R\\) indicator matrix obtain pairwise components. create_T2_mat() returns \\(p(p+1)/2 \\times 2^p\\) indicator matrix \\(T_2\\) pick unviariate bivariate moments response patterns. create_Beta_mat() returns \\(4p \\times p(p+1)/2\\) design matrix \\(\\Beta\\) described manuscript (used express parameters terms residuals). Note ordering similar ordering create_resp_pattern(). design matrices currently apply binary data. See technical documents details.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/transformation-matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create transformation matrices — transformation-matrices","text":"","code":"create_G_mat(p = 3)  create_T2_mat(p = 3)  create_Beta_mat(p = 3)"},{"path":"https://haziqj.ml/lavaan.bingof/reference/transformation-matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create transformation matrices — transformation-matrices","text":"p (integer > 0) number items.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/transformation-matrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create transformation matrices — transformation-matrices","text":"matrix. Additionally, may inspect attributes regarding ordering pairwise components \\(G\\) matrix.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/transformation-matrices.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create transformation matrices — transformation-matrices","text":"Myrsini Katsikatsou (create_Beta_mat())","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/transformation-matrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create transformation matrices — transformation-matrices","text":"","code":"create_G_mat(p = 3) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #>  [1,]    0    0    0    0    0    0    1    1 #>  [2,]    0    0    1    1    0    0    0    0 #>  [3,]    0    0    0    0    1    1    0    0 #>  [4,]    1    1    0    0    0    0    0    0 #>  [5,]    0    0    0    0    0    1    0    1 #>  [6,]    0    1    0    1    0    0    0    0 #>  [7,]    0    0    0    0    1    0    1    0 #>  [8,]    1    0    1    0    0    0    0    0 #>  [9,]    0    0    0    1    0    0    0    1 #> [10,]    0    1    0    0    0    1    0    0 #> [11,]    0    0    1    0    0    0    1    0 #> [12,]    1    0    0    0    1    0    0    0 #> attr(,\"pairwise\") #>      [,1] [,2] [,3] #> [1,]    1    1    2 #> [2,]    2    3    3 create_T2_mat(p = 3) #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,]    1    1    1    1    0    0    0    0 #> [2,]    1    1    0    0    1    1    0    0 #> [3,]    1    0    1    0    1    0    1    0 #> [4,]  110  109  100   99   10    9    0   -1 #> [5,]    1    1    0    0    0    0    0    0 #> [6,]    1    0    1    0    0    0    0    0 #> [7,]    1    0    0    0    1    0    0    0 create_Beta_mat(p = 3) #>       [,1] [,2] [,3] [,4] [,5] [,6] #>  [1,]   -1   -1    0    1    0    0 #>  [2,]    1    0    0   -1    0    0 #>  [3,]    0    1    0   -1    0    0 #>  [4,]    0    0    0    1    0    0 #>  [5,]   -1    0   -1    0    1    0 #>  [6,]    1    0    0    0   -1    0 #>  [7,]    0    0    1    0   -1    0 #>  [8,]    0    0    0    0    1    0 #>  [9,]    0   -1   -1    0    0    1 #> [10,]    0    1    0    0    0   -1 #> [11,]    0    0    1    0    0   -1 #> [12,]    0    0    0    0    0    1"},{"path":"https://haziqj.ml/lavaan.bingof/reference/txt_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to return the textual model for lavaan fit, depending on which\nsimulation scenario we are investigating. — txt_mod","title":"Function to return the textual model for lavaan fit, depending on which\nsimulation scenario we are investigating. — txt_mod","text":"Function return textual model lavaan fit, depending simulation scenario investigating.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/txt_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to return the textual model for lavaan fit, depending on which\nsimulation scenario we are investigating. — txt_mod","text":"","code":"txt_mod(model.no = 1L)"},{"path":"https://haziqj.ml/lavaan.bingof/reference/txt_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to return the textual model for lavaan fit, depending on which\nsimulation scenario we are investigating. — txt_mod","text":"model.(integer) Choose 1--5. See details.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/txt_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to return the textual model for lavaan fit, depending on which\nsimulation scenario we are investigating. — txt_mod","text":"Character vector factor model input lavaan::lavaan().","code":""},{"path":"https://haziqj.ml/lavaan.bingof/reference/txt_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to return the textual model for lavaan fit, depending on which\nsimulation scenario we are investigating. — txt_mod","text":"","code":"txt_mod(1) #> [1] \"eta1 =~ NA*y1 + y2 + y3 + y4 + y5\""},{"path":[]},{"path":"https://haziqj.ml/lavaan.bingof/news/index.html","id":"id_2023-development-version","dir":"Changelog","previous_headings":"","what":"2023-04-08","title":"lavaan.bingof (development version)","text":"Create R package lavaan.bingof easier shipment R codes implement goodness--fit tests. Migrate bookdown format presentation pkgdown articles. Previous repo haziqj/gof-comp-lik accompanying website likely shutdown.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/news/index.html","id":"id_2023-development-version-1","dir":"Changelog","previous_headings":"","what":"2023-04-01","title":"lavaan.bingof (development version)","text":"discussions, decide stratify population based latent variable η. See technical details clarification. turn, missing component proper estimation multinomial matrix Σ using sampling weights. Finally, complex sampling simulation works!","code":""},{"path":"https://haziqj.ml/lavaan.bingof/news/index.html","id":"id_2023-development-version-2","dir":"Changelog","previous_headings":"","what":"2023-03-22","title":"lavaan.bingof (development version)","text":"Experimenting different complex sampling scheme, whereby population determined multiple variable including stratum-level, cluster-level, individual characteristics (called shape, colour, “mystery”). Inspired blog post “Estimating relative risk simulated complex survey @ellis2013nz”. However, generating data way makes population highly misspecified, none test statistics work.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/news/index.html","id":"id_2023-development-version-3","dir":"Changelog","previous_headings":"","what":"2023-02-26","title":"lavaan.bingof (development version)","text":"Wrote technical details section derivation test statistics using maximum likelihood estimation pairwise maximum likelihood estimation. Consequently R code rewritten efficiency. Degree freedom calculation via Rao-Scott type adjustment moment matching. New tests: Wald V3, RSS Multinomial.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/news/index.html","id":"id_2023-development-version-4","dir":"Changelog","previous_headings":"","what":"2023-02-20","title":"lavaan.bingof (development version)","text":"Decided basic stratified sampling procedure, population consists 50 strata varying population size within stratum. number PSU selected 20 total sample size 1000. create homogeneity within stratum, stratum level random effect generated. Although bias reduced sampling weights used, test statistics values still suspect.","code":""},{"path":"https://haziqj.ml/lavaan.bingof/news/index.html","id":"id_2023-development-version-5","dir":"Changelog","previous_headings":"","what":"2023-01-25","title":"lavaan.bingof (development version)","text":"long hiatus, revisit sampling weights problem. Successfully modified relevant parts lavaan sampling weights can used. objective function (minimised) now takes normalised weights instead frequency counts. See github.com/haziqj/lavaan install fork lavaan Next problem best generate complex sample?","code":""},{"path":"https://haziqj.ml/lavaan.bingof/news/index.html","id":"id_2021-development-version","dir":"Changelog","previous_headings":"","what":"2021-09-25","title":"lavaan.bingof (development version)","text":"Simulation results reproduced SRS case. Unable proceed complex sampling case lavaan accept sampling.weights estimator = \"PML\".","code":""},{"path":"https://haziqj.ml/lavaan.bingof/news/index.html","id":"id_2021-development-version-1","dir":"Changelog","previous_headings":"","what":"2021-08-29","title":"lavaan.bingof (development version)","text":"Inherit R scripts rewrite reproducibility. R code tested.","code":""}]
